<!DOCTYPE html>
<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>         <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en-US">
<!--<![endif]-->
<head>
	<!-- Published by OpenCities, 1.36.1.1 -->

    
        
    
    
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="theme-color" content="#FFFFFF"/>
    <title>404! - City and County of Denver</title>
	<meta name="generator" content="OpenCities - https://granicus.com/product/opencities" />

    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="apple-mobile-web-app-capable" content="yes" />
        <meta name="description" content="Uh oh! Looks like you&#39;ve wandered off the path.Why not head back home or try searching our city directory?Head Back HomeTry the Directory" />
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://www.denvergov.org/404" />
    <meta property="og:title" content="404!" />
    <meta property="og:description" content="Uh oh! Looks like you&#39;ve wandered off the path.Why not head back home or try searching our city directory?Head Back HomeTry the Directory" />
    <meta property="og:image" content="https://www.denvergov.org/files/ocwebsite/Public/HeroImage/city-and-county-building-card.jpg?w=1200" />
    <meta property="twitter:card" content="summary" />
    <meta property="twitter:title" content="404!" />
    <meta property="twitter:description" content="Uh oh! Looks like you&#39;ve wandered off the path.Why not head back home or try searching our city directory?Head Back HomeTry the Directory" />
    <meta property="twitter:image" content="https://www.denvergov.org/files/ocwebsite/Public/HeroImage/city-and-county-building-card.jpg?w=1080" />
    <meta name="msvalidate.01" content="5EE3CE42FDB12C4D5DD01676813DECDA" />
    <link rel="canonical" href="https://www.denvergov.org/404" />
<meta name="robots" content="noindex" />
    <!-- Matomo Tag Manager --><script>  var _mtm = window._mtm = window._mtm || [];  _mtm.push({'mtm.startTime': (new Date().getTime()), 'event': 'mtm.Start'});  (function() {    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];    g.async=true; g.src='https://matomo.granicus.com/js/container_3Ody8hgV.js'; s.parentNode.insertBefore(g,s);  })();</script><!-- End Matomo Tag Manager -->

    <link rel="apple-touch-icon" sizes="180x180" href="/files/ocfavicon/Public/apple-touch-icon.png?V=637380910420698470">
<link rel="icon" type="image/png" sizes="32x32" href="/files/ocfavicon/Public/favicon-32x32.png?V=637380910420698470">
<link rel="icon" type="image/png" sizes="16x16" href="/files/ocfavicon/Public/favicon-16x16.png?V=637380910420698470">
<link rel="manifest" href="/files/ocfavicon/Public/site.webmanifest?V=637380910420698470">
<link rel="shortcut icon" href="/files/ocfavicon/Public/favicon.ico?V=637380910420698470">
<meta name="msapplication-TileColor" content="#000000">
<meta name="msapplication-config" content="/files/ocfavicon/Public/browserconfig.xml?V=637380910420698470">
    <script>
        document.documentElement.className = document.documentElement.className.replace(/\bno-js\b/g, "js");
    </script>
    <link rel="stylesheet" href="https://use.typekit.net/hrx2fun.css">
<!-- proxima-nova font families-->
    
        
            <script type="text/javascript">
                window.__oc_flags_ImprovedBreakpointEventHandling = true;
            </script>
            
        
    
    
    
        <script type="text/javascript">
            var __metaQueryBreakpoints = {
                'sc-size-4': '(max-width: 480px)',
                'sc-size-3': '(min-width: 480px) and (max-width: 768px)',
                'sc-size-2': '(min-width: 768px) and (max-width: 992px)',
                'sc-size-1': '(min-width: 992px)'
            }

            var __ocSizePoints = [
                { min: 0, name: 'sc-size-4' },
                { min: 480, name: 'sc-size-3' },
                { min: 768, name: 'sc-size-2' },
                { min: 992, name: 'sc-size-1' }
            ];

        </script>
    

    <!-- Framework Section -->
    
    <script src="//ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script>window.jQuery || document.write('<script src="/files/templates/00000000-0000-0000-0000-000000000000/08abfcfd-5ff7-4ff4-b1fd-59eca59d7e06/v/498/jquery-3.7.1.min.js?seamlessts=638953935629372299" ><\/script>')</script>
    <script src="/files/templates/00000000-0000-0000-0000-000000000000/08abfcfd-5ff7-4ff4-b1fd-59eca59d7e06/v/498/jquery-migrate-3.4.0.js?seamlessts=638953935629372299"></script>
    
        <script src="https://maps.googleapis.com/maps/api/js?v=quarterly&key=AIzaSyCBa6YMBb52iuYuijNuIVV82--hVsXhEQg&libraries=geometry,places,marker,geocoding"></script>
    
    <script src="/files/templates/00000000-0000-0000-0000-000000000000/08abfcfd-5ff7-4ff4-b1fd-59eca59d7e06/v/498/modernizr.custom.710f3bf.js?seamlessts=638953935629372299" defer></script>
    
    <!--// End Framework Section -->
    <!-- OpenCities Section -->
    <script>
        var OpenCities = OpenCities || {};
        OpenCities.Paths = {
            SiteTemplate: '/files/templates/00000000-0000-0000-0000-000000000000/08abfcfd-5ff7-4ff4-b1fd-59eca59d7e06/v/498/',
            ThemePath: '/files/templates/00000000-0000-0000-0000-000000000000/08abfcfd-5ff7-4ff4-b1fd-59eca59d7e06/v/498/'
        };
    </script>
    <script src='/ocapi/fe44cb9b-b69a-413e-a8ca-9293365825b1/en-US/websitesettings.js'></script>
    <script src="/files/templates/00000000-0000-0000-0000-000000000000/08abfcfd-5ff7-4ff4-b1fd-59eca59d7e06/v/498/oc_head.js?applied=20250918052515"></script>
    <!-- Script Combine. To enter debug mode for this browser session, enter OcScriptCombineDebug=true as a querystring -->
<link href="/files/oc-templates/00000000-0000-0000-0000-000000000000/08abfcfd-5ff7-4ff4-b1fd-59eca59d7e06/v/498/oc_grid.css~oc_grid_s1.css~oc_style.css~oc_wizard_style.css~oc_main.css~oc_forms.css~oc_wizard.css~oc_wizard_menu.css~oc_main_s1.css~oc_wizard_s1.css~oc_wizard_menu_s1.css~OcScriptCombine_Minify0?uniqueid=20250918052515" rel="stylesheet" type="text/css">
    <!-- Script Combine. To enter debug mode for this browser session, enter OcScriptCombineDebug=true as a querystring -->
<link href="/files/oc-templates/00000000-0000-0000-0000-000000000000/08abfcfd-5ff7-4ff4-b1fd-59eca59d7e06/v/498/client_style.css~client.css~client_menu.css~client_s1.css~client_menu_s1.css~client_forms.css~OcScriptCombine_Minify0?uniqueid=20250918052515" rel="stylesheet" type="text/css">
    <script>
(function (BackgroundSettings, $, undefined) {
    BackgroundSettings.initialise = function () {
        this.Application = {"CSSSelector":".content-outer-container","EnableFade":true};
    };
} (OpenCities.BackgroundSettings = OpenCities.BackgroundSettings || {}, jQuery));
OpenCities.BackgroundSettings.initialise();
</script>
    
    <!-- Script Combine. To enter debug mode for this browser session, enter OcScriptCombineDebug=true as a querystring -->
<link href="/files/oc-templates/00000000-0000-0000-0000-000000000000/08abfcfd-5ff7-4ff4-b1fd-59eca59d7e06/v/498/oc_print.css~client_print.css~OcScriptCombine_Minify0?uniqueid=20250918052515" rel="stylesheet" type="text/css" media="print">
    <!-- Script Combine. To enter debug mode for this browser session, enter OcScriptCombineDebug=true as a querystring -->
<script src="/files/oc-templates/00000000-0000-0000-0000-000000000000/08abfcfd-5ff7-4ff4-b1fd-59eca59d7e06/v/498/external_plugins.js~oc_form_helper.js~oc_main.js~plugins.js~oc_main_init.js~OcScriptCombine_Minify0?uniqueid=20250918052515" defer="true"></script>
    <!--# include file="/static/opencities/oc-header.html" -->

<script src="https://use.fortawesome.com/e23ee7d2.js"></script>

<script>
// DenverApps Embed Patch
(function() {
    window.CCD_SERVICES_INFO = window.CCD_SERVICES_INFO || [];
    window.CCD_SERVICES_INFO.push({
		"@@root": { microsoftAjaxBreaksStringStartsWith: String.prototype.startsWith }
	});
})();

</script>
    
</head>
<body class="body layout-modern  site-search-always-visble  content-type-oc-general content-template-oc-full-width-without-image group-template-oc-full-width-with-default-header page-name-n404 page-sequence-37 page-depth-1 page-section-37 website-type-primary device-desktop " id="body-top">
    <form name="mainForm" method="post" action="/images/default-source/default-album/denver_logo.png" id="mainForm">
<input type="hidden" name="__SEAMLESSVIEWSTATE" id="__SEAMLESSVIEWSTATE" value="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" />
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="" />


<script src="https://ajax.aspnetcdn.com/ajax/4.6/1/MicrosoftAjax.js" type="text/javascript"></script>
<script type="text/javascript">
//<![CDATA[
(window.Sys && Sys._Application && Sys.Observer)||document.write('<script type="text/javascript" src="/ScriptResource.axd?d=VLg13c2tfeL--KHe49HO3krTPCeu5o2vBGqQVs24rfEhKiCKYuFdt618jau75UwZFOlxUv7BaTL-biS1AsfSSQiiEoLpldUUWVP5BKwbqwF3SOXzHZZ9jvNJ0nij-qfOKHi-Te9C9fbyjsKnPvVN_YT1Kr7uxV--UUmaCvuQE0w1&t=5c0e0825"><\/script>');//]]>
</script>

<script src="/ScriptResource.axd?d=lG2FifBt8yQIgsC_Ru5IP0pT0H0enxmO5T1GEJMLY-MD6_BHBqtKspTvQod12cvaE7QfhyqBIeiQwKmExr3qFMAn01wkZnHyk_CJs-DDR1dlSUB7y4QGBk4G3ez3EJD-0G3ItDZlljQ3nSlT3IkxJvtvddTtDmJ5Dq5pjm796C_CMy3mxZkJ11BiF1I7gxIkyzH2WobPMnIuWoDBIu1DCQ3MFCAEsHQNNhfSXyu4LXErTYOAnXkWcYk3HoUdDZ1TwWA1tno3GldQ5lk5GoJGntIImfWY6dNxnd6O2TTpWIwp6QWdNPwIsxchO6idz2RCH082rO2M3-uVlbl69lXleDTU7v1Z9JPiHkh-BnKOpPyuJSbXMVZTZgAWEy9pHSaAEDvYZzMR0YmDIHTEJt_x4W4jzE5ZcYEvfCFO-AAq2SuM3eYfamyNqqozssSrup630" type="text/javascript"></script>
<script src="/ScriptResource.axd?d=uwtYZEUgrsATLrLRqPmFJQds7jg6qweb4qlY4GgHGcXg0op6gCwS6L0JWFNleFpF-2JSPI9jCjfMKaZL_rHe3etg6KyBZon-fCyaw35x_KNIzTb3dSACbLYrHjL2sJOsbx-_4CGMcHMfHQ3hQk3_63gFhPC7N9XUqSVGV1CDxah-5ikG7j4hV-c_OXt2iiU50&amp;t=ffffffff94c710a9" type="text/javascript"></script>
    
<script type="text/javascript">
    try{
        function SeamlessEndRequestHandler(sender, args) {
            try {
                var dataItems = args.get_dataItems();
                if(dataItems.ctl04_seamless_script_manager)
                    document.getElementById('__SEAMLESSVIEWSTATE').value = dataItems.ctl04_seamless_script_manager;
            }
            catch (e) { }
        }

        Sys.WebForms.PageRequestManager.getInstance().add_endRequest(SeamlessEndRequestHandler);
    }
    catch (e) { }
</script>

    <div class="unsupported-browser-warning js-element"></div>
    
    <div hidden>
        <span id="new-window-0">opens in new tab or window </span>
    </div>
    <div class="overlay-container"></div>
    
    <div class="background-container">
        <div class="page-container">
            <!-- OC Layout Element GROUP TEMPLATE -->
            <!--groupTemplateStart--><div id="skip-to-content-container">
        <a href='#main-content' class="visuallyhidden focusable" id='skip-to-content-link'>Skip to main content</a>
    </div><header><div class="print-header-outer-container print-element">
<img src="/files/templates/00000000-0000-0000-0000-000000000000/08abfcfd-5ff7-4ff4-b1fd-59eca59d7e06/v/497/print-header.png" alt="City and County of Denver - Logo" />
</div>
            <div class="toolbar-outer-container">
  <div class="toolbar-inner-container clearfix">
    <div class="toolbar-item toolbar-quicklinks toolbar-display-dropdown">
	<button type="button" aria-controls="toolbar-quicklinks-drop-down" aria-expanded="false" class="toolbar-button toolbar-button-quicklinks js-element"><span>Quick Links</span><i aria-hidden="true"></i></button>	
	<div id="toolbar-quicklinks-drop-down" class="toolbar-drop-down toolbar-quicklinks-drop-down clearfix">
		<ul>
		  <li><a href="https://www.denvergov.org/Government/Make-a-Payment" class="oc-icon-b oc-i--none link-type-internal"><span>Make a Payment</span></a></li><li><a href="https://denvergov.org/Online-Services-Hub/Report-an-Issue/issue/new-report" class="oc-icon-b oc-i--none link-type-external"><span>Report an Issue</span></a></li><li><a href="https://www.denvergov.org/Services" class="oc-icon-b oc-i--none link-type-internal"><span>Services</span></a></li>
		</ul>
	</div>
</div><div class="toolbar-item toolbar-language notranslate toolbar-display-dropdown"><div class="no-js-element">
			<a href="https://www.denvergov.org/404?oc_lang=en-US" class="lang-item lang-en-us" data-translate-to="en-us" lang="en-US">English (United States)<span class="visuallyhidden"> Select this as your preferred language</span></a><a href="https://www.denvergov.org/404?oc_lang=es" class="lang-item lang-es" data-translate-to="es" lang="en">Spanish<span class="visuallyhidden"> Select this as your preferred language</span></a><a href="https://www.denvergov.org/404?oc_lang=vi" class="lang-item lang-vi" data-translate-to="vi" lang="en">Vietnamese<span class="visuallyhidden"> Select this as your preferred language</span></a><a href="https://www.denvergov.org/404?oc_lang=am" class="lang-item lang-am" data-translate-to="am" lang="en">Amharic<span class="visuallyhidden"> Select this as your preferred language</span></a><a href="https://www.denvergov.org/404?oc_lang=zh-CN" class="lang-item lang-zh-cn" data-translate-to="zh-cn" lang="en">Chinese (Simplified)<span class="visuallyhidden"> Select this as your preferred language</span></a><a href="https://www.denvergov.org/404?oc_lang=ar" class="lang-item lang-ar" data-translate-to="ar" lang="en">Arabic<span class="visuallyhidden"> Select this as your preferred language</span></a><a href="https://www.denvergov.org/404?oc_lang=ru" class="lang-item lang-ru" data-translate-to="ru" lang="en">Russian<span class="visuallyhidden"> Select this as your preferred language</span></a><a href="https://www.denvergov.org/404?oc_lang=fr" class="lang-item lang-fr" data-translate-to="fr" lang="en">French<span class="visuallyhidden"> Select this as your preferred language</span></a><a href="https://www.denvergov.org/404?oc_lang=my" class="lang-item lang-my" data-translate-to="my" lang="en">Myanmar (Burmese)<span class="visuallyhidden"> Select this as your preferred language</span></a><a href="https://www.denvergov.org/404?oc_lang=ne" class="lang-item lang-ne" data-translate-to="ne" lang="en">Nepali<span class="visuallyhidden"> Select this as your preferred language</span></a><a href="https://www.denvergov.org/404?oc_lang=fa" class="lang-item lang-fa" data-translate-to="fa" lang="en">Persian<span class="visuallyhidden"> Select this as your preferred language</span></a><a href="https://www.denvergov.org/404?oc_lang=so" class="lang-item lang-so" data-translate-to="so" lang="en">Somali<span class="visuallyhidden"> Select this as your preferred language</span></a><a href="https://www.denvergov.org/404?oc_lang=ps" class="lang-item lang-ps" data-translate-to="ps" lang="en">Pashto<span class="visuallyhidden"> Select this as your preferred language</span></a>
		</div>
	<button type="button" aria-controls="toolbar-language-drop-down" aria-expanded="false" class="toolbar-button toolbar-button-language js-element">  
        <span class="current-language">
            Select a language to translate to
		</span>
		<i aria-hidden="true"></i>
	</button>
	<div id="toolbar-language-drop-down" class="toolbar-drop-down toolbar-language-drop-down js-element clearfix">
		<ul>
		    <li><a href="https://www.denvergov.org/404?oc_lang=en-US" class="lang-item lang-en-us" data-translate-to="en-us" lang="en-US">English (United States)<span class="visuallyhidden"> Select this as your preferred language</span></a></li><li><a href="https://www.denvergov.org/404?oc_lang=es" class="lang-item lang-es" data-translate-to="es" lang="en">Spanish<span class="visuallyhidden"> Select this as your preferred language</span></a></li><li><a href="https://www.denvergov.org/404?oc_lang=vi" class="lang-item lang-vi" data-translate-to="vi" lang="en">Vietnamese<span class="visuallyhidden"> Select this as your preferred language</span></a></li><li><a href="https://www.denvergov.org/404?oc_lang=am" class="lang-item lang-am" data-translate-to="am" lang="en">Amharic<span class="visuallyhidden"> Select this as your preferred language</span></a></li><li><a href="https://www.denvergov.org/404?oc_lang=zh-CN" class="lang-item lang-zh-cn" data-translate-to="zh-cn" lang="en">Chinese (Simplified)<span class="visuallyhidden"> Select this as your preferred language</span></a></li><li><a href="https://www.denvergov.org/404?oc_lang=ar" class="lang-item lang-ar" data-translate-to="ar" lang="en">Arabic<span class="visuallyhidden"> Select this as your preferred language</span></a></li><li><a href="https://www.denvergov.org/404?oc_lang=ru" class="lang-item lang-ru" data-translate-to="ru" lang="en">Russian<span class="visuallyhidden"> Select this as your preferred language</span></a></li><li><a href="https://www.denvergov.org/404?oc_lang=fr" class="lang-item lang-fr" data-translate-to="fr" lang="en">French<span class="visuallyhidden"> Select this as your preferred language</span></a></li><li><a href="https://www.denvergov.org/404?oc_lang=my" class="lang-item lang-my" data-translate-to="my" lang="en">Myanmar (Burmese)<span class="visuallyhidden"> Select this as your preferred language</span></a></li><li><a href="https://www.denvergov.org/404?oc_lang=ne" class="lang-item lang-ne" data-translate-to="ne" lang="en">Nepali<span class="visuallyhidden"> Select this as your preferred language</span></a></li><li><a href="https://www.denvergov.org/404?oc_lang=fa" class="lang-item lang-fa" data-translate-to="fa" lang="en">Persian<span class="visuallyhidden"> Select this as your preferred language</span></a></li><li><a href="https://www.denvergov.org/404?oc_lang=so" class="lang-item lang-so" data-translate-to="so" lang="en">Somali<span class="visuallyhidden"> Select this as your preferred language</span></a></li><li><a href="https://www.denvergov.org/404?oc_lang=ps" class="lang-item lang-ps" data-translate-to="ps" lang="en">Pashto<span class="visuallyhidden"> Select this as your preferred language</span></a></li>
        </ul>
	</div></div>
  </div>
</div>
            <div class="header-outer-container">
    <div class="header-container header-layout-4  clearfix">
			<div class="header-site-logo">
				<a href="https://www.denvergov.org/Home"  lang="en-US">
					<span class="visuallyhidden">
					City and County of Denver - Home - Logo
					</span>
				</a>
			</div>
      
		    <div class="mobile-search-btn js-element">
		        <button><i aria-hidden="true"></i><span class="mobile-search-btn-text"><span class="visuallyhidden">Open </span>Search</span></button>
		    </div>
		    <div class="header-website-settings">
                <button id="btn-mob-nav">
                    <i aria-hidden="true"></i><span class="side-menu-btn-text">Menu</span>
                </button>
        	</div>
          <div class="navigation-outer-container">
	<div id="nav" role="navigation" class="navigation-container  navigation-container-option-8" data-menu-type="horizontal" aria-label="primary">
        <div class="grid">
            <div class="col-xs-12">              
                <ul class="sf-menu mega-menu" id="sc-main-menu"><li class="nav-section-quarters-1   first-item nav-item-seq-1">
<a href="https://www.denvergov.org/My-Property" class="nav-level-1 nav-has-children"  target="">
	<i class="item-icon" aria-hidden="true"></i><span class="item-text">My Property</span>
</a>
<button class="mobnav-subarrow" ><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="second-level-container ch-6" aria-label="Sub-menu">

          
            <li class="second-level-item  "><a href="https://www.denvergov.org/My-Property/Recycling-Compost-and-Trash" class="nav-has-children"  target="">Recycling, Compost, and Trash</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Recycling-Compost-and-Trash/Denver-Utilities-Online-Accounts"  target="_self">Denver Utilities Online Accounts</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Recycling-Compost-and-Trash/Report-Missed-Pick-up"  target="_self">Report Missed Pick-up</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Recycling-Compost-and-Trash/Find-Schedules-and-Reminders"  target="_self">Find Schedules and Reminders</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Recycling-Compost-and-Trash/Expanded-Collection"  target="_self">Expanded Waste Collection Service</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Recycling-Compost-and-Trash/Recycling"  target="_self">Recycling</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Recycling-Compost-and-Trash/Trash"  target="_self">Trash</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Recycling-Compost-and-Trash/Large-Item-Pickup"  target="_self">Large Item Pickup</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Recycling-Compost-and-Trash/Compost"  target="_self">Compost</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/My-Property/Neighborhood-Inspections" class=""  target="_self">Neighborhood Inspections</a></li><li class="second-level-item  "><a href="https://www.denvergov.org/My-Property/Property-Information" class="nav-has-children"  target="">Property Information</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Property-Information/Denver-Zoning-Code"  target="_self">Denver Zoning Code</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Property-Information/Denver-Maps"  target="_blank">Denver Maps</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Property-Information/Property-Assessments"  target="_self">Property Assessments</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Property-Information/Property-Records"  target="_self">Property Records</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Property-Information/Property-Values"  target="_blank">Property Values</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Property-Information/Real-Property"  target="_self">Real Property</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/My-Property/Property-Tax" class="nav-has-children"  target="">Property Tax</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Property-Tax/Property-Tax-Information"  target="_self">Property Tax Information</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Property-Tax/Pay-Property-Taxes"  target="_self">Pay Property Taxes</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Property-Tax/Real-Estate-Delinquent-Taxes-and-Tax-Lien-Sale"  target="_self">Real Estate Delinquent Taxes & Tax Lien Sale</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Property-Tax/Senior-Property-Tax-Exemption"  target="_self">Senior Property Tax Exemption</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Property-Tax/Property-Tax-Relief"  target="_self">Property Tax Relief</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/My-Property/Remodeling-and-Construction" class="nav-has-children"  target="">Remodeling and Construction</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Remodeling-and-Construction/Building-Codes-Policies-Guides"  target="_self">Building Codes, Policies, and Guides</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Remodeling-and-Construction/Permit-Office"  target="">Denver Permitting Office</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Remodeling-and-Construction/Denver-Zoning-Code"  target="_self">Denver Zoning Code</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Remodeling-and-Construction/Find-Your-Zoning"  target="_blank">Find Your Zoning</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Remodeling-and-Construction/Online-Construction-Services"  target="_self">Online Construction Services</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Remodeling-and-Construction/Permits"  target="_self">Permits (E-Permits)</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/My-Property/Utilities" class="nav-has-children"  target="">Utilities</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Utilities/Water-Sewer-Bill-at-Denver-Water"  target="_blank">DenverWater.org Billing & Customer Service</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Utilities/StormPay"  target="_blank">Pay Storm Drainage Bills Online</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Utilities/Storm-Drainage-e-Billing-Signup"  target="_self">Storm Drainage e-Billing</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/My-Property/Utilities/Wastewater-Billing-Support"  target="_self">Wastewater Billing and Support</a></li></ul></li></ul></li>
          
            <li class="nav-section-quarters-1   nav-item-seq-2">
<a href="https://www.denvergov.org/Community" class="nav-level-1 nav-has-children"  target="">Community</a>
<button class="mobnav-subarrow" ><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="second-level-container ch-8" aria-label="Sub-menu">

          
            <li class="second-level-item  "><a href="https://www.denvergov.org/Community/Activities-Programs-and-Events" class="nav-has-children"  target="">Activities, Programs, and Events</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Community/Activities-Programs-and-Events/Special-Events"  target="_self">Special Events</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Activities-Programs-and-Events/Events-in-Denver"  target="_blank">Upcoming Events in Denver</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Activities-Programs-and-Events/Arts"  target="_blank">Arts & Venues Calendar</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Activities-Programs-and-Events/View-Register-for-Recreation-Center-Classes"  target="_blank">View & Register for Recreation Center Classes</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Activities-Programs-and-Events/City-Events-Directory"  target="_self">City Meetings & Events</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Community/Sustainability" class="nav-has-children"  target="">Climate & Sustainability</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Community/Sustainability/Certifiably-Green-Denver"  target="_self">Certifiably Green Denver</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Sustainability/Sustainable-Neighborhoods"  target="_blank">Sustainable Neighborhoods</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Sustainability/Sustainability-Programs-Services"  target="_self">Sustainability Programs & Services</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Community/Denver-Climate-Project" class="nav-has-children"  target="">Denver Climate Project</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Community/Denver-Climate-Project/Do-More"  target="">Do More</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Denver-Climate-Project/Do-Less"  target="">Do Less</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Denver-Climate-Project/Do-Something"  target="">Do Something</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Community/Neighborhoods" class="nav-has-children"  target="">Neighborhoods</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Community/Neighborhoods/Denver-Days"  target="">Denver Days</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Neighborhoods/Council-Districts"  target="_blank">Find City Council Districts</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Neighborhoods/Find-a-Library"  target="_blank">Find a Library</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Neighborhoods/Find-a-Local-School"  target="_blank">Find a Local School</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Neighborhoods/RNOs"  target="_self">Find Registered Neighborhood Organizations (RNOs)</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Neighborhoods/Historic-Landmarks-Districts"  target="_blank">Historic Landmarks & Districts</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Neighborhoods/Neighborhood-Dashboards"  target="_self">Neighborhood Data Dashboards</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Neighborhoods/CPD-Planning"  target="_self">Community Planning & Development Planning Projects</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Neighborhoods/Inspections"  target="_self">Neighborhood Inspections</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Neighborhoods/DOTI-Projects"  target="_self">Transportation & Infrastructure Projects</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Community/Parks-and-Public-Spaces" class="nav-has-children"  target="">Parks and Public Spaces</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Community/Parks-and-Public-Spaces/City-Venues-and-Buildings"  target="">City Venues and Buildings</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Parks-and-Public-Spaces/Find-a-Park"  target="_self">Find a Park</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Parks-and-Public-Spaces/Park-Rentals-and-Permits"  target="_self">Park Rentals and Permits</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Parks-and-Public-Spaces/Recreation-Centers"  target="_self">Recreation Centers</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Parks-and-Public-Spaces/Trails"  target="_self">Trails</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Parks-and-Public-Spaces/Swimming-Pools"  target="_self">Swimming Pools</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Community/Services" class="nav-has-children"  target="">Resident Services</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Community/Services/MyFriendBen"  target="_blank">MyFriendBen</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Services/Housing-Help"  target="_self">Rent, Eviction & Foreclosure Help</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Services/Energy"  target="_self">Energy Assistance (LEAP)</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Services/Pets"  target="_self">Pet Services</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Services/Online-Services-Hub"  target="_self">Online Services</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Community/Support" class="nav-has-children"  target="">Support Programs</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Community/Support/Food"  target="">Denver's Food Resources</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Support/Heat-Resources"  target="">Extreme Heat Resources</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Support/Find-Shelter"  target="_self">Find Shelter and "Front Door" Access</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Support/Housing-Homelessness-Guide"  target="">Housing and Homelessness Guide</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Community/Support/Mediation"  target="_blank">Community Mediation</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Community/Share-and-Connect" class="nav-has-children"  target="">Share & Connect</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Community/Share-and-Connect/Subscribe"  target="_self">Sign up for the Denver Local</a></li></ul></li></ul></li>
          
            <li class="nav-section-quarters-2   nav-item-seq-3">
<a href="https://www.denvergov.org/Business" class="nav-level-1 nav-has-children"  target="">Business</a>
<button class="mobnav-subarrow" ><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="second-level-container ch-8" aria-label="Sub-menu">

          
            <li class="second-level-item  "><a href="https://www.denvergov.org/Business/Build-Your-Business" class="nav-has-children"  target="">Build Your Business</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Business/Build-Your-Business/Start-Your-Business"  target="_self">Start Your Business</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Build-Your-Business/Grow-Your-Business"  target="_self">Grow Your Business</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Build-Your-Business/Choose-Denver"  target="_self">Choose Denver</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Build-Your-Business/DEDO-Redirect"  target="_self">Economic Development & Opportunity</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Business/Business-Licensing-Redirect" class="nav-has-children"  target="_self">Business Licensing</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Business/Business-Licensing-Redirect/Security-Services"  target="_self">Security Services</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Business-Licensing-Redirect/Marijuana-Licenses"  target="_self">Marijuana Licenses</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Business-Licensing-Redirect/Liquor-Licenses"  target="_self">Liquor Licenses</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Business-Licensing-Redirect/Alarm-Permit"  target="_self">Alarm Permit</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Business-Licensing-Redirect/Short-Term-Rentals"  target="_self">Short Term Rentals</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Business-Licensing-Redirect/Business-Licenses-Directory"  target="_self">Business Licenses Directory</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Business/Business-Tax" class="nav-has-children"  target="">Business Tax</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Business/Business-Tax/Pay-Business-Tax"  target="_blank">Pay Business Tax</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Business-Tax/Tax-Information"  target="_self">Information</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Business/Business-Resources" class="nav-has-children"  target="">Business Resources</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Business/Business-Resources/Small-Business-Resources"  target="_self">Auditor - Small Business Resources</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Business-Resources/Business-Personal-Property"  target="_self">Business Personal Property</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Business-Resources/Certifiably-Green-Denver"  target="_self">Certifiably Green Denver</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Business-Resources/Transportation-and-Infrastructure-Document-Center"  target="_self">Transportation & Infrastructure Document Center</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Business-Resources/DOTI-Design-PM-Guidelines"  target="_self">DOTI Design Project Management Guidelines</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Business/Employer-Assistance-and-Resources" class="nav-has-children"  target="">Employer Assistance and Resources</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Business/Employer-Assistance-and-Resources/Employer-Assistance"  target="_self">Employer Assistance</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Employer-Assistance-and-Resources/Investments"  target="_self">Investments</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Employer-Assistance-and-Resources/Surplus-Auctions"  target="_self">Surplus Auctions</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Business/Work-with-the-City" class="nav-has-children"  target="">Work with the City</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Business/Work-with-the-City/Become-a-City-Vendor"  target="_self">Become a City Vendor</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Work-with-the-City/Current-Bidding-Opportunities"  target="_self">Current Bidding Opportunities</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Work-with-the-City/Awarded-Bidding-Opportunities"  target="_self">Awarded Bidding Opportunities</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Work-with-the-City/Small-Business-Certification"  target="_self">Small Business Certification</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Work-with-the-City/Prevailing-Wage"  target="_self">Prevailing Wage</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Business/Find-Jobs" class="nav-has-children"  target="">Find Jobs</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Business/Find-Jobs/City-Jobs"  target="_self">City Jobs</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Find-Jobs/Career-Service-Board"  target="_self">Career Service Board</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Find-Jobs/Jobseeker-Resources"  target="_self">Jobseeker Resources</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Business/Contract-Administration" class="nav-has-children"  target="">Do Business with DOTI</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Business/Contract-Administration/Current"  target="">Current Bidding Opportunities</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Contract-Administration/Results"  target="">Bid Results</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Contract-Administration/Projects"  target="_self">Current Transportation & Infrastructure Projects</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Contract-Administration/Upcoming-Construction"  target="">Future Construction Solicitations</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Contract-Administration/Upcoming-Professional"  target="">Future Professional Services Solicitations</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Contract-Administration/Upcoming-On-Call"  target="">Future Opportunities for On-Call Contract Holders</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Business/Contract-Administration/On-Call-List"  target="">List of Current On-Call Contract Holders</a></li></ul></li></ul></li>
          
            <li class="nav-section-quarters-2   nav-item-seq-4">
<a href="https://www.denvergov.org/Vehicles-Parking" class="nav-level-1 nav-has-children"  target="">Vehicles & Parking</a>
<button class="mobnav-subarrow" ><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="second-level-container ch-4" aria-label="Sub-menu">

          
            <li class="second-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Parking" class="nav-has-children"  target="">Parking In Denver</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Parking/Permits"  target="">Parking Permits & Programs</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Parking/Tickets-and-Towing"  target="">Tickets, Towing & Disputes</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Parking/Street-Parking"  target="">Street Parking</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Parking/Accessible-Parking"  target="">Accessible Parking Sign Program</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Parking/Lots-and-Garages"  target="">Public Parking Lots and Garages</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Parking/Plans-and-Outreach"  target="">Curbside Planning and Outreach</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Vehicles" class="nav-has-children"  target="">Vehicles</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Vehicles/DMV"  target="_self">DMV</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Vehicles/License-Plates"  target="_self">License Plates</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Vehicles/Registration-and-Title-Services"  target="_self">Registration and Title Services</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Vehicles/Emissions-and-Insurance"  target="_self">Emissions & Insurance</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Vehicles/Fees-and-Sales-Tax"  target="_self">Fees & Sales Tax</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Vehicles/Online-Vehicle-Auctions"  target="_self">Online Vehicle Auctions</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Vehicles/Towing-and-Impound"  target="_self">Towing & Impound</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Vehicles/Street-Sweeping"  target="_self">Street Sweeping</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Vehicles/Snow-Removal"  target="_self">Snow Removal</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Vehicles/Report-an-Abandoned-Vehicle"  target="_blank">Report an Abandoned Vehicle</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Bikes" class="nav-has-children"  target="">Bikes</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Bikes/Bike-Parking"  target="_self">Bike Parking</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Bikes/Denver-Bike-Map"  target="_self">Denver Bike Map</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Bikes/EBike-and-Scooter-Share"  target="_self">EBike and Scooter Share</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Bikes/Register-Your-Bike"  target="_blank">Register Your Bike</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Transit" class="nav-has-children"  target="">Public Transit</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Transit/System-Map-Transit-Corridors"  target="_self">System Map & Transit Corridors</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Transit/Transit-Projects"  target="_self">Transit Projects</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Vehicles-Parking/Transit/RTD"  target="_blank">RTD (Regional Transportation District)</a></li></ul></li></ul></li>
          
            <li class="nav-section-quarters-3   nav-item-seq-5">
<a href="https://www.denvergov.org/Public-Safety" class="nav-level-1 nav-has-children"  target="">Safety</a>
<button class="mobnav-subarrow" ><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="second-level-container ch-7" aria-label="Sub-menu">

          
            <li class="second-level-item  "><a href="https://www.denvergov.org/Public-Safety/Department-of-Public-Safety" class="nav-has-children"  target="_self">Department of Public Safety</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Department-of-Public-Safety/911-Emergency-Services"  target="_self">911 Emergency Services</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Department-of-Public-Safety/Community-Corrections"  target="_self">Community Corrections</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Department-of-Public-Safety/Accountability"  target="_self">Commissions & Accountability</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Department-of-Public-Safety/Public-Safety-Cadet-Program"  target="_self">Public Safety Cadet Program</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Department-of-Public-Safety/Alternative-Response"  target="_self">Alternative Response</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Department-of-Public-Safety/Data-and-Transparency"  target="">Data and Transparency</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Department-of-Public-Safety/About-the-Department-of-Public-Safety"  target="_self">About the Department of Public Safety</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Department-of-Public-Safety/Crime-Prevention-and-Control-Commission"  target="_self">Crime Prevention and Control Commission</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Public-Safety/Fire-Department" class="nav-has-children"  target="_self">Fire Department</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Fire-Department/Find-a-Fire-Station"  target="_self">Find a Fire Station</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Fire-Department/Fire-Permits-and-Licensing"  target="_self">Fire Permits & Licensing</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Public-Safety/Police-Department" class="nav-has-children"  target="_self">Police Department</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Police-Department/Find-a-Police-Station"  target="_self">Find a Police Station</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Police-Department/Concealed-Weapons"  target="_self">Concealed Weapons</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Police-Department/Crime-Information"  target="_self">Crime Information</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Police-Department/Crime-Map"  target="_self">Crime Map</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Police-Department/Sex-Offenders"  target="_self">Sex Offenders</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Police-Department/Cold-Cases"  target="_self">Cold Cases</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Police-Department/Police-Records"  target="_self">Police Records</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Police-Department/Traffic-Enforcement"  target="_self">Traffic Enforcement</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Police-Department/Photo-Radar-Enforcement"  target="_self">Photo Radar Enforcement</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Police-Department/File-a-Report"  target="_blank">File a Report</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Public-Safety/Sheriff-Department" class="nav-has-children"  target="_self">Sheriff Department</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Sheriff-Department/Inmate-Services"  target="_self">Inmate Services</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Sheriff-Department/Jail-Visits"  target="_self">Jail Visits</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Public-Safety/Sheriff-Department/Inmate-Lookup"  target="_blank">Inmate Lookup</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Public-Safety/Citizen-Oversight-Board" class=""  target="_self">Citizen Oversight Board</a></li><li class="second-level-item  "><a href="https://www.denvergov.org/Public-Safety/Independent-Monitor" class=""  target="_self">Office of the Independent Monitor</a></li><li class="second-level-item  "><a href="https://www.denvergov.org/Public-Safety/Warrants" class=""  target="_blank">Warrants and Case Records</a></li></ul></li>
          
            <li class="nav-section-quarters-3   nav-item-seq-6">
<a href="https://www.denvergov.org/Government" class="nav-level-1 nav-has-children"  target="">Government</a>
<button class="mobnav-subarrow" ><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="second-level-container ch-9" aria-label="Sub-menu">

          
            <li class="second-level-item  "><a href="https://www.denvergov.org/Government/Citywide-Programs-and-Initiatives" class="nav-has-children"  target="">Citywide Programs and Initiatives</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Government/Citywide-Programs-and-Initiatives/GO-Bonds"  target="">General Obligation (GO) Bond Programs</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Citywide-Programs-and-Initiatives/Downtown-Development-Authority"  target="">Downtown Development Authority</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Citywide-Programs-and-Initiatives/American-Rescue-Plan-Act-Funding"  target="">American Rescue Plan Act Funding</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Citywide-Programs-and-Initiatives/Blueprint-Denver"  target="_self">Blueprint Denver</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Citywide-Programs-and-Initiatives/Comprehensive-Plan-2040"  target="_self">Comprehensive Plan 2040</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Citywide-Programs-and-Initiatives/National-Western-Center"  target="">National Western Center</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Citywide-Programs-and-Initiatives/Office-of-Social-Equity-Innovation"  target="_self">Office of Social Equity & Innovation</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Citywide-Programs-and-Initiatives/Peak-Performance"  target="_self">Peak Performance</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Citywide-Programs-and-Initiatives/Vision-Zero"  target="">Vision Zero</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Government/Agencies-Departments-Offices" class=""  target="_self">Agencies, Departments, and Offices</a></li><li class="second-level-item  "><a href="https://www.denvergov.org/Government/Elected-Officials" class="nav-has-children"  target="">Elected Officials</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Government/Elected-Officials/Mayor"  target="_self">Mayor Mike Johnston</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Elected-Officials/City-Council"  target="_self">Denver City Council</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Elected-Officials/Auditor"  target="_self">Auditor - Timothy O'Brien</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Elected-Officials/Clerk-Recorder"  target="">Clerk & Recorder - Paul López</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Government/Elections" class="nav-has-children"  target="">Election Resources</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Government/Elections/Elections-Division-Voter-Info"  target="_self">Current Election Information</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Elections/Register-to-Vote"  target="_self">Register to Vote</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Elections/Track-Your-Ballot"  target="_blank">Track Your Ballot</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Elections/Denver-Elections"  target="_self">Denver Elections Division</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Elections/Denver-Decides"  target="">Denver Decides</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Elections/Election-Data-Maps"  target="_self">Election Data and Maps</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Government/Legislation-and-Transparency" class="nav-has-children"  target="">Legislation and Transparency</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Government/Legislation-and-Transparency/Denver-Revised-Municipal-Code"  target="_blank">Denver Revised Municipal Code</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Legislation-and-Transparency/Executive-Orders"  target="">Executive Orders</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Legislation-and-Transparency/How-City-Government-Works"  target="">How City Government Works</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Legislation-and-Transparency/Public-Meetings"  target="_self">Public Meetings</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Legislation-and-Transparency/Transparent-Denver"  target="">Transparent Denver</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Government/Data-and-Maps" class="nav-has-children"  target="">Data and Maps</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Government/Data-and-Maps/Open-Data-Catalog"  target="_blank">Open Data Catalog</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Data-and-Maps/DEN-Data-Catalog"  target="_blank">DEN Airport Open Data</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Data-and-Maps/Denver-Maps"  target="_blank">Denver Maps</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Data-and-Maps/Neighborhood-Maps"  target="_blank">Neighborhood Maps</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Data-and-Maps/Council-Districts"  target="_blank">Council Districts</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Data-and-Maps/Crime-Information"  target="_self">Crime Information</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Data-and-Maps/Historic-Landmarks"  target="_blank">Historic Landmarks</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Data-and-Maps/Where-to-Vote"  target="_blank">Where to Vote</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Government/Make-a-Payment" class="nav-has-children"  target="">Make a Payment</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Government/Make-a-Payment/Court-Citations"  target="_blank">Court Citations</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Make-a-Payment/Solid-Waste"  target="_self">Solid Waste Bills</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Make-a-Payment/Parking-Tickets"  target="_self">Pay a Parking Ticket</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Make-a-Payment/Pet-Licensing"  target="_self">Pet Licensing</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Make-a-Payment/Property-Taxes"  target="_self">Pay Property Taxes</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Make-a-Payment/Stormwater"  target="_self">Stormwater</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Government/Records" class="nav-has-children"  target="">Records</a><button class="mobnav-subarrow-child"><i aria-hidden="true"></i><span class="visuallyhidden opensubmenu text">Sub-menu</span></button>
<ul class="third-level-container" aria-label="Sub-menu">
          
            <li class="third-level-item  "><a href="https://www.denvergov.org/Government/Records/Audit-Reports"  target="_self">Audit Reports</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Records/Board-of-Adjustment-for-Zoning-Records"  target="_self">Board of Adjustment for Zoning Records</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Records/Clerk-Recorder-Records"  target="_self">Clerk & Recorder Records</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Records/Police-Records"  target="_self">Police Records</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Records/Property-Records"  target="_self">Property Records</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Records/Colorado-Open-Records-Act-CORA"  target="_self">Colorado Open Records Act (CORA)</a></li><li class="third-level-item  "><a href="https://www.denvergov.org/Government/Records/General-Records-Retention-Schedule"  target="">General Records Retention Schedule</a></li></ul></li><li class="second-level-item  "><a href="https://www.denvergov.org/Government/City-Jobs" class=""  target="_self">City Jobs</a></li></ul></li>
          
            </ul>
            </div>
        </div>
    </div>
</div>
			
			<div class="header-search-control-container" id="header-search">
				<div class="search-inner-container">
					<div class="sc-search-panel">
	<label for="ctl08_txtSearch" id="ctl08_lblSearch" class="sc-search-label">Search</label><input name="ctl08$txtSearch" type="text" id="ctl08_txtSearch" class="sc-search-text" placeholder="Explore our site" /><input type="submit" name="ctl08$btnSearch" value="Search" id="ctl08_btnSearch" class="sc-search-button" />
</div>
					<div role="status" id="predictiveResults"></div>
				</div>
			</div>
    </div>
</div>

            
            </header>
            <div class="content-outer-container">
                <div id="main" role="main" class="main-outer-container clearfix">
                        
                        <div class="content-main-container">
                            <div class="grid">
					            <div class="col-xs-12">
						            <nav id="breadcrumbs-container" aria-label="Breadcrumbs">
							            <span class="visuallyhidden">You Are Here : </span>
<span role="list">
<span role="listitem">
	<a href="https://www.denvergov.org/Home"  lang="en-US">Home</a>
	<span class="nav-separator" role="presentation">/</span>
</span>
          <span class="current-page" role="listitem" >404!</span></span>
						            </nav>
					            </div>
                      
					            <div class="col-xs-12">
						            <div class="main-inner-container">
							            <div id="main-content" class="main-container clearfix">
							              
                            <!-- OC Layout Element Conent Template -->
							              <!--normalTemplateStart--><div class="grid">
    <div class="col-xs-12">
        <h1 class='oc-page-title '>404!</h1>
        
        <p style="font-size: 500.0%; color: rgb(2,57,111);"><strong>Uh oh!</strong></p>
<p style="font-size: 350.0%; color: rgb(2,57,111);"><strong><img alt="Illustration of a Blue bear sitting" src="/files/assets/public/v/1/global-ccd/images/bluebear_sitting.png?w=900&amp;h=1200" style="width: 40%; float: left;" /> Looks like you've wandered off the path.</strong></p>
<p style="font-size: 250.0%;">Why not head back home or try searching our city directory?</p>
<p style="text-align: center;"><strong><a href="https://www.denvergov.org/Home" target="_self" class="styled-button-calltoaction">Head Back Home</a></strong></p>
<p style="text-align: center;"><strong><a href="https://www.denvergov.org/Directory" target="_self" class="styled-button-calltoaction">Try the Directory</a></strong></p>


      
        
            
        
    </div>
    
    
</div><!--normalTemplateEnd-->
                            
                            
                            
							            </div>
						            </div>
					            </div>
                        
                            </div>
                        </div>
                        <div class="back-to-top-container text-center">
                            <a href="#body-top" id="back-to-top"><i aria-hidden="true"></i><span class="js-visuallyhidden">Back to top</span></a>
                        </div>
                </div>
            </div><!--groupTemplateEnd-->
            <footer>
                
                    <div class="footer-outer-container footer-first-row">
                        <div class="footer-container clearfix">
                            <div class="grid grid-pad">
                                <div class="col-xs-12 col-s-6 col-m-4 " >
	<h3 class="footer-title">Contact 3-1-1</h3>
	<p><a href="https://denvergov.org/Online-Services-Hub/Report-an-Issue" target="_self"><strong>Report an Issue</strong></a><br />
<strong>Call <a href="tel:3-1-1">3-1-1</a></strong><br />
<strong>Outside Denver:</strong> <a href="tel:720-913-1311">(720) 913-1311</a><br />
<strong>Hearing Impaired Only (TTY):</strong> <a href="tel:720-913-8479">(720) 913-8479</a><br />
<strong>For Emergencies:</strong> <a href="tel:9-1-1">9-1-1</a></p>


	
	
</div><div class="col-xs-12 col-s-6 col-m-4 " >
	<h3 class="footer-title">Visit Other Denver Sites</h3>
	
	<ul class="footer-links with-icons ">  <li class="footer-link-">
	<a href="https://www.artsandvenuesdenver.com/" target="_blank"  >
<i aria-hidden="true"></i>Arts & Venues Denver
</a>
</li>
          <li class="footer-link-">
	<a href="https://www.denvercountycourt.org/" target="_blank"  >
<i aria-hidden="true"></i>Denver County Courts
</a>
</li>
          <li class="footer-link-">
	<a href="https://www.denverlibrary.org/" target="_blank"  >
<i aria-hidden="true"></i>Denver Public Library
</a>
</li>
          <li class="footer-link-">
	<a href="https://www.flydenver.com/" target="_blank"  >
<i aria-hidden="true"></i>Denver International Airport
</a>
</li>
          <li class="footer-link-">
	<a href="https://denverzoo.org/" target="_blank"  >
<i aria-hidden="true"></i>Denver Zoo
</a>
</li>
          <li class="footer-link-">
	<a href="https://www.denver.org/" target="_blank"  >
<i aria-hidden="true"></i>Visit Denver
</a>
</li>
           </ul>
	
</div><div class="col-xs-12 col-s-6 col-m-4 " >
	<h3 class="footer-title">Share &amp; Connect</h3>
	<p><strong>The Denver Local is your resource for<br />
city news and information directly to your inbox.</strong></p>
<p><a href="https://www.denvergov.org/Sign-Up-for-City-Updates" class="styled-button-calltoaction"><strong><span style="font-size: 100%;">Sign up to stay informed!</span></strong></a></p>
<hr />
<p><strong><span style="font-size: 125%;">Follow Us On Social</span></strong></p>
<div><ul class="footer-links with-icons social-media-links ccd-social-foot">
    
            <li class="footer-link-facebook">
                <a href="https://www.facebook.com/CityandCountyofDenver/" target="_blank" aria-describedby="new-window-0" class="opens-in-new-tab">
                    <span class="sr-only">Follow on Facebook</span>
                    <i class="ccd ccd-facebook-official"></i>
                </a>
            </li>
            <li class="footer-link-instagram">
                <a href="https://www.instagram.com/therealcityofdenver" target="_blank" aria-describedby="new-window-0" class="opens-in-new-tab">
                    <span class="sr-only">Instagram</span>
                    <i class="ccd ccd-instagram"></i>
                </a>
            </li>
            <li class="footer-link-twitter">
                <a href="https://twitter.com/CityofDenver" target="_blank" aria-describedby="new-window-0" class="opens-in-new-tab">
                     <span class="sr-only">Follow on Twitter</span>
                     <i class="ccd ccd-twitterx"></i>
                     
                </a>
            </li>
            <li class="footer-link-youtube">
                <a href="https://www.youtube.com/user/Denver8TV" target="_blank" aria-describedby="new-window-0" class="opens-in-new-tab">
                     <span class="sr-only">YouTube</span>
                     <i class="ccd ccd-youtube"></i>
                </a>
            </li>
            <li class="footer-link-nextdoor">
                <a href="https://nextdoor.com/agency-detail/co/denver/denver-environmental-health/" target="_blank" aria-describedby="new-window-0" class="opens-in-new-tab">
                     <span class="sr-only">Next Door</span>
                     <i class="ccd ccd-nextdoor"></i>
                </a>
            </li>
</ul></div>
<div><script>
(function(){ 
	window.CCD_SERVICES_INFO = window.CCD_SERVICES_INFO || [];
	
	// Restore String.prototype.startsWith which MicrosoftAjax.js breaks
	if (window.CCD_SERVICES_INFO && Array.isArray(window.CCD_SERVICES_INFO)) {
		const rootObj = window.CCD_SERVICES_INFO.find(val => "@@root" in val);
		if (rootObj) {
			String.prototype.startsWith = rootObj['@@root'].microsoftAjaxBreaksStringStartsWith;
		}
	}

	const host = window.location.host;

	switch (host) {
		case 'local.denvergov.org':

			/* NOTES:
			 *		For local to work and to improve DX:
			 *		- I don't know... I need this to auto load on code watch/start, so I was thinking of a 
			 *			secondary bootstrap script that could be modiified more easily that continuing to have 
			 *			to update the embed in OC.  How that secondary bootstrap works, I have no idea.
			 */


window.CCD_SERVICES_INFO.push({
    "@denverdesign/susi": {
        "pipelineId": "Manual",
        "team": "DenverGov",
        "buildStageAttempt": "1",
        "buildStamp": 1662576866,
        "deployStageAttempt": "1",
        "deployStamp": 1662576866,
        "environment": "LOCAL",
        "container": "LOCAL"
    }
});
var cachebuster = Math.round(new Date().getTime() / 1000);

document.write(`

<script type="module" src="https://localhost:3333/build/dsds-stencil.esm.js" data-stencil><\/script>
<script nomodule="" src="https://localhost:3333/build/dsds-stencil.js" data-stencil><\/script>
<ccd-rsusi-buttons name="Cheese"></ccd-rsusi-buttons>
<style>.toolbar-inner-container {top:8px;}</style>
`);

// Add error handling around this... also, how does this work with the pipeline?
const toolbar = document.getElementsByClassName('toolbar-inner-container');
const site_logo = document.getElementsByClassName('header-site-logo');
const susi = document.getElementsByTagName("ccd-rsusi-buttons");

let susi_clone = susi[0].cloneNode(true);

site_logo[0].after(susi[0]);
toolbar[0].prepend(susi_clone);



			console.log(`----------- Loading in local DG. -----------\n${JSON.stringify(window.CCD_SERVICES_INFO, null, 4)}`);

			break;
		case 'test.denvergov.org':


if (!(['/Online-Services-Hub/Report-an-Issue','/Online-Services-Hub/Ask-a-Question','/myprofile/home','/Home/embeds/appservices/profiles'].some(word => window.location.pathname.startsWith(word)))) {
	
window.CCD_SERVICES_INFO.push({
    "@denverdesign/susi": {
        "pipelineId": "59731",
        "team": "DenverGov",
        "buildStageAttempt": "1",
        "buildStamp": 1662574842,
        "deployStageAttempt": "1",
        "deployStamp": 1662574842,
        "environment": "Test",
        "container": "DenverApps - denverdesign/susi"
    }
});

// serve from localhost:4200

document.write(`
<meta itemprop="DenverAppsService" content="denverdesign/stencil/rsusi" />
<script type="module" src="/denverdesign/stencil/rsusi@1.5.1/dist/dsds-rsusi/dsds-rsusi.esm.js" data-stencil><\/script>
<ccd-rsusi-buttons></ccd-rsusi-buttons>
<style>.toolbar-inner-container {top:8px;}
.toolbar-inner-container ccd-rsusi-buttons{
        display: block;
        margin-top: 10px;
    }    
    .header-container  ccd-rsusi-buttons{
        display: none;
    }
@media screen and (max-width: 992px) {

    .header-container{
            display: flex;
            flex-wrap: wrap;
    }    
    .header-search-control-container{
        flex: 1 1 100%;
    }    
        
    .toolbar-inner-container ccd-rsusi-buttons{
        display: none;
    }
    .header-container  ccd-rsusi-buttons{
        display: flex;
        flex: 1 1 auto;
        justify-content: right;
	    padding-right: 83px;
	    padding-top: 28px;
    }}
</style>
`);


// Add error handling around this... also, how does this work with the pipeline?
const ccd_rsusi_toolbar_test = document.getElementsByClassName('toolbar-inner-container');
const ccd_site_logo_test = document.getElementsByClassName('header-site-logo');
const ccd_rsusi_test = document.getElementsByTagName("ccd-rsusi-buttons");

ccd_rsusi_toolbar_test[0].prepend(ccd_rsusi_test[0]);

const ccd_rsusi_clone_test = ccd_rsusi_test[0].cloneNode(true);
ccd_rsusi_clone_test.setAttribute('id','ccdSussi-mob');
ccd_site_logo_test[0].after(ccd_rsusi_clone_test);

for( instance of document.querySelectorAll('ccd-rsusi-buttons') ){

        instance.authConfig = {
	        authMode: 'rx',
	        behavior: {
	            autoRefreshToken: true,
	            useGlobalRedirectHandler: true,
	        },
	        logging: {
	            logLevel: 2,
	            includeMsalLogs: true, // remove for false
	        },
	        internal: {
	            tenantId: '0818353a-111c-40e5-b1b7-90a247a483e9',
	            rxClientId: '2fd28ac6-a304-4b40-b5fb-11a6408d1055',
	            authorityDomain: 'denverresidentstest.b2clogin.com',
	            globalRedirectHandler: `https://${window.location.host}/appservices/global-auth-handler/`,
	            globalErrorPage: `https://${window.location.host}/myprofile/oops`
	        }
    	};
    	instance.baseApiUrl = 'test-den.denvergov.org';
}
}


break;
		case 'qa.denvergov.org':

if (!(['/Online-Services-Hub/Report-an-Issue','/Online-Services-Hub/Ask-a-Question','/myprofile/home','/Home/embeds/appservices/profiles'].some(word => window.location.pathname.startsWith(word)))) {
	
window.CCD_SERVICES_INFO.push({
    "@denverdesign/susi": {
        "pipelineId": "58854",
        "team": "DenverGov",
        "buildStageAttempt": "1",
        "buildStamp": 1662574842,
        "deployStageAttempt": "1",
        "deployStamp": 1662574842,
        "environment": "QA",
        "container": "DenverApps - denverdesign/susi"
    }
});

// serve from localhost:4200

document.write(`

<script type="module" src="/denverdesign/stencil/rsusi@1.5.1/dist/dsds-rsusi/dsds-rsusi.esm.js" data-stencil><\/script>
<ccd-rsusi-buttons></ccd-rsusi-buttons>
<style>.toolbar-inner-container {top:8px;}
.toolbar-inner-container ccd-rsusi-buttons{
        display: block;
        margin-top: 10px;
    }    
    .header-container  ccd-rsusi-buttons{
        display: none;
    }
@media screen and (max-width: 992px) {

    .header-container{
            display: flex;
            flex-wrap: wrap;
    }    
    .header-search-control-container{
        flex: 1 1 100%;
    }    
        
    .toolbar-inner-container ccd-rsusi-buttons{
        display: none;
    }
    .header-container  ccd-rsusi-buttons{
        display: flex;
        flex: 1 1 auto;
        justify-content: right;
	    padding-right: 83px;
	    padding-top: 28px;
    }}
@media screen and (max-width: 600px) {
	.header-container ccd-rsusi-buttons { 
		padding-top: 10px;
		}
}    
</style>
`);


// Add error handling around this... also, how does this work with the pipeline?
const ccd_rsusi_toolbar_qa = document.getElementsByClassName('toolbar-inner-container');
const ccd_site_logo_qa = document.getElementsByClassName('header-site-logo');
const ccd_rsusi_qa = document.getElementsByTagName("ccd-rsusi-buttons");

ccd_rsusi_toolbar_qa[0].prepend(ccd_rsusi_qa[0]);

const ccd_rsusi_clone_qa = ccd_rsusi_qa[0].cloneNode(true);
ccd_rsusi_clone_qa.setAttribute('id','ccdSussi-mob');
ccd_site_logo_qa[0].after(ccd_rsusi_clone_qa);

for( instance of document.querySelectorAll('ccd-rsusi-buttons') ){

        instance.authConfig = {
        authMode: 'rx',
        behavior: {
            autoRefreshToken: true,
            useGlobalRedirectHandler: true,
        },
        logging: {
            logLevel: 2,
            includeMsalLogs: true, // remove for false
        },
        internal: {
            tenantId: 'f85795a7-e7de-418f-a88a-07e6e2c8cca9',
            rxClientId: 'cb173676-3d47-484f-bbae-62240b9eb9e7',
            authorityDomain: 'denverresidentsqa.b2clogin.com',
            globalRedirectHandler: `https://${window.location.host}/appservices/global-auth-handler/`,
            globalErrorPage: `https://${window.location.host}/myprofile/oops`
        }
    };
    instance.baseApiUrl = 'qa-den.denvergov.org';
}
}





break;
		case 'denvergov.org':
		case 'www.denvergov.org':




if (!(['/Online-Services-Hub/Report-an-Issue','/Online-Services-Hub/Ask-a-Question','/myprofile/home','/Home/embeds/appservices/profiles'].some(word => window.location.pathname.startsWith(word)))) {
	
window.CCD_SERVICES_INFO.push({
    "@denverdesign/susi": {
        "pipelineId": "59731",
        "team": "DenverGov",
        "buildStageAttempt": "1",
        "buildStamp": 1662574842,
        "deployStageAttempt": "1",
        "deployStamp": 1662574842,
        "environment": "QA",
        "container": "DenverApps - denverdesign/susi"
    }
});

// serve from localhost:4200

document.write(`
<meta itemprop="DenverAppsService" content="denverdesign/stencil/rsusi" />
<script type="module" src="/denverdesign/stencil/rsusi@1.5.1/dist/dsds-rsusi/dsds-rsusi.esm.js" data-stencil><\/script>
<ccd-rsusi-buttons></ccd-rsusi-buttons>
<style>.toolbar-inner-container {top:8px;}
.toolbar-inner-container ccd-rsusi-buttons{
        display: block;
        margin-top: 10px;
    }    
    .header-container  ccd-rsusi-buttons{
        display: none;
    }
@media screen and (max-width: 992px) {

    .header-container{
            display: flex;
            flex-wrap: wrap;
    }    
    .header-search-control-container{
        flex: 1 1 100%;
    }    
        
    .toolbar-inner-container ccd-rsusi-buttons{
        display: none;
    }
    .header-container  ccd-rsusi-buttons{
        display: flex;
        flex: 1 1 auto;
        justify-content: right;
	    padding-right: 83px;
	    padding-top: 28px;
    }}
@media screen and (max-width: 600px) {
	.header-container ccd-rsusi-buttons { 
		padding-top: 10px;
		}
}     
</style>
`);


// Add error handling around this... also, how does this work with the pipeline?
const ccd_rsusi_toolbar_prod = document.getElementsByClassName('toolbar-inner-container');
const ccd_site_logo_prod = document.getElementsByClassName('header-site-logo');
const ccd_rsusi_prod = document.getElementsByTagName("ccd-rsusi-buttons");

ccd_rsusi_toolbar_prod[0].prepend(ccd_rsusi_prod[0]);

const ccd_rsusi_clone_prod = ccd_rsusi_prod[0].cloneNode(true);
ccd_rsusi_clone_prod.setAttribute('id','ccdSussi-mob');
ccd_site_logo_prod[0].after(ccd_rsusi_clone_prod);

for( instance of document.querySelectorAll('ccd-rsusi-buttons') ){

        instance.authConfig = {
        authMode: 'rx',
        behavior: {
            autoRefreshToken: true,
            useGlobalRedirectHandler: true,
        },
        logging: {
            logLevel: 0,
            includeMsalLogs: true, // remove for false
        },
        internal: {
            tenantId: 'd8a278b1-6e69-429a-9e51-b2ba11f5703d',
            rxClientId: '684aed88-0697-479e-a565-f5ed62c6ea3f',
            authorityDomain: 'denverresidents.b2clogin.com',
            globalRedirectHandler: `https://${window.location.host}/appservices/global-auth-handler/`,
            globalErrorPage: `https://${window.location.host}/myprofile/oops`
        }
    };
    instance.baseApiUrl = 'den.denvergov.org';
}
}





break;
		case 'www.denvergov.org':
            // document.write('<p style="color:red;">The \'{{ServiceName}}\' embedded services cannot be loaded via the direct opencities.com URL.</p>\n<p style="color:red;">Please visit this page on denvergov.org</p>');
            console.log('----------- Skipping SUSI embed load for prelive domain. -----------');
			break;
		default:
			console.log('----------- Dont load, unknow host. -----------');
	}
})();


</script></div>
<div><script>


/**
 * Class representing a navigation device detector.
 * Tracks the user's favored navigation device and syncs the state across sessions.
 */
 class Client_OcNavigationDeviceDetector {
    /**
     * Callbacks for favored navigation device change.
     * @type {Function[]}
     */
    _favoredNavigationDeviceChangeCallbacks = [];

    /**
     * Keys used for keyboard navigation.
     * @type {string[]}
     */
    NAVIGATION_KEYS = ['Tab', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'Enter'];

    /**
     * Creates an instance of Client_OcNavigationDeviceDetector.
     */
    constructor() {
        // Load from local storage if available
        this._loadState();

        // Add event listeners
        window.addEventListener('keydown', (e) => this._keydown(e), { passive: true });
        window.addEventListener('mousedown', (e) => this._mousedown(e), { passive: true });
        window.addEventListener('touchstart', (e) => this._touchstart(e), { passive: true });

        // Debounced save to local storage
        this._debouncedSyncState = this._debounce(this._syncState, 1000);
    }

    /**
     * Checks if the user has navigated using a mouse.
     * @returns {boolean} True if mouse navigation events have occurred, otherwise false.
     */
    get hasNavigatedMouse() {
        return this.state.navigationEvents.mouse > 0;
    }

    /**
     * Checks if the user has navigated using a keyboard.
     * @returns {boolean} True if keyboard navigation events have occurred, otherwise false.
     */
    get hasNavigatedKeyboard() {
        return this.state.navigationEvents.keyboard > 0;
    }

    /**
     * Checks if the user has navigated using touch.
     * @returns {boolean} True if touch navigation events have occurred, otherwise false.
     */
    get hasNavigatedTouch() {
        return this.state.navigationEvents.touch > 0;
    }

    /**
     * Gets the favored navigation device based on interaction counts.
     * @returns {string} The favored navigation device ('mouse', 'keyboard', or 'touch').
     */
    get favoredNavigationDevice() {
        return this._updateFavoredNavigationDevice();
    }

    /**
     * Lazy-loaded state object. Initializes state if it doesn't exist.
     * @returns {Object} The current state object.
     */
    get state() {
        if (!this._state) {
            this._state = this._getNewState();
        }
        return this._state;
    }

    /**
     * Lazy-loaded last loaded state object. Initializes state if it doesn't exist.
     * @returns {Object} The last loaded state object.
     */
    get lastLoadedState() {
        if (!this._lastLoadedState) {
            this._lastLoadedState = this._getNewState();
        }
        return this._lastLoadedState;
    }

    /**
     * Creates a new state object.
     * @returns {Object} A new state object with default values.
     */
    _getNewState() {
        return {
            navigationEvents: {
                mouse: 0,
                keyboard: 0,
                touch: 0,
            },
            lastFavoredDevice: null,
        };
    }

    /**
     * Retrieves the saved state from local storage.
     * @returns {Object} The saved state object, or a new state if none exists.
     */
    _getSavedState() {
        const savedState = localStorage.getItem('Client_OcNavigationDeviceDetector.state');
        return JSON.parse(savedState) || this._getNewState();
    }

    /**
     * Loads the state from local storage and merges it into the current state.
     */
    _loadState() {
        if (!this.state) {
            this.state = this._getNewState();
        }
        this._lastLoadedState = this._getSavedState();
        Object.assign(this.state, this._getSavedState());
    }

    /**
     * Saves the current state to local storage, merging with any existing saved state.
     */
    _saveState() {
        if (this._isSaving) {
            return;
        }
        this._isSaving = true;
        try {
            const currentSavedState = this._getSavedState();
            this.state.navigationEvents.mouse += (currentSavedState.navigationEvents.mouse - this.lastLoadedState.navigationEvents.mouse);
            this.state.navigationEvents.keyboard += (currentSavedState.navigationEvents.keyboard - this.lastLoadedState.navigationEvents.keyboard);
            this.state.navigationEvents.touch += (currentSavedState.navigationEvents.touch - this.lastLoadedState.navigationEvents.touch);
            this._updateFavoredNavigationDevice();
            localStorage.setItem('Client_OcNavigationDeviceDetector.state', JSON.stringify(this.state));
        } catch {
            // eslint-disable-next-line no-console
            console.error('State could not be saved.');
        }
        this._isSaving = false;
    }

    /**
     * Syncs the current state by saving it and then reloading it from local storage.
     */
    _syncState() {
        this._saveState();
        this._loadState();
    }

    /**
     * Creates a debounced version of a function.
     * @param {Function} func - The function to debounce.
     * @param {number} delay - The debounce delay in milliseconds.
     * @returns {Function} The debounced function.
     */
    _debounce(func, delay) {
        let timeout;
        return (...args) => {
            clearTimeout(timeout);
            timeout = setTimeout(() => func.apply(this, args), delay);
        };
    }

    /**
     * Handles the keydown event to track keyboard navigation.
     * @param {KeyboardEvent} event - The keydown event.
     */
    _keydown(event) {
        if (this.NAVIGATION_KEYS.includes(event.key)) {
            this.state.navigationEvents.keyboard++;
            this._updateFavoredNavigationDevice();
            this._debouncedSyncState(); // Use debounced save
        }
    }

    /**
     * Handles the mousedown event to track mouse navigation.
     */
    _mousedown() {
        this.state.navigationEvents.mouse++;
        this._updateFavoredNavigationDevice();
        this._debouncedSyncState(); // Use debounced save
    }

    /**
     * Handles the touchstart event to track touch navigation.
     */
    _touchstart() {
        this.state.navigationEvents.touch++;
        this._updateFavoredNavigationDevice();
        this._debouncedSyncState(); // Use debounced save
    }

    /**
     * Updates the favored navigation device based on the highest interaction count.
     * @returns {string} The updated favored navigation device.
     */
    _updateFavoredNavigationDevice() {
        let favored = null;
        let maxEvents = 0;
        if (this.state.navigationEvents.mouse > maxEvents) {
            maxEvents = this.state.navigationEvents.mouse;
            favored = 'mouse';
        }
        if (this.state.navigationEvents.keyboard > maxEvents) {
            maxEvents = this.state.navigationEvents.keyboard;
            favored = 'keyboard';
        }
        if (this.state.navigationEvents.touch > maxEvents) {
            maxEvents = this.state.navigationEvents.touch;
            favored = 'touch';
        }
        if (this.state.lastFavoredDevice !== favored) {
            this._triggerFavoredNavigationDeviceChange(favored);
            this._syncState();
        }
        return favored;
    }

    /**
     * Triggers callbacks for a change in the favored navigation device.
     * @param {string} favored - The new favored navigation device.
     */
    _triggerFavoredNavigationDeviceChange(favored) {
        const oldFavored = favored === this.state.lastFavoredDevice ? null : this.state.lastFavoredDevice;
        this._favoredNavigationDeviceChangeCallbacks.forEach((callback) => {
            callback(favored, oldFavored);
        });
        this.state.lastFavoredDevice = favored;
    }

    /**
     * Registers a callback to be invoked when the favored navigation device changes.
     * @param {Function} callback - The callback function.
     */
    onFavoredNavigationDeviceChange(callback) {
        if (!this._favoredNavigationDeviceChangeCallbacks.includes(callback)) {
            this._favoredNavigationDeviceChangeCallbacks.push(callback);
        }
        callback(this.state.lastFavoredDevice, null);
    }
}

/**
 * Class for adapting content based on the user's navigation device.
 */
class Client_OcAdaptiveContentByNavigationDevice {
    /**
     * Creates an instance of Client_OcAdaptiveContentByNavigationDevice.
     */
    constructor() {
        this.navigationDeviceDetector = new Client_OcNavigationDeviceDetector();
    }

    /**
     * Adapts content based on the favored navigation device.
     * @param {Object} options - Configuration options.
     * @param {string} options.selector - CSS selector for target elements.
     * @param {string} [options.mouse] - Content to display for mouse users.
     * @param {string} [options.keyboard] - Content to display for keyboard users.
     * @param {string} [options.touch] - Content to display for touch users.
     */
    adapt(options) {
        const thisOptions = {
            selector: null,
            mouse: '',
            keyboard: '',
            touch: '',
            ...options
        };

        this.navigationDeviceDetector.onFavoredNavigationDeviceChange((newDevice) => {
            if (Object.prototype.hasOwnProperty.call(thisOptions, newDevice)) {
                document.querySelectorAll(thisOptions.selector).forEach((element) => {
                    element.innerHTML = thisOptions[newDevice];
                });
            }
        });
    }
}

(function(){
	window.CCD_SERVICES_INFO = window.CCD_SERVICES_INFO || [];

	// Restore String.prototype.startsWith which MicrosoftAjax.js breaks
	if (window.CCD_SERVICES_INFO && Array.isArray(window.CCD_SERVICES_INFO)) {
		const rootObj = window.CCD_SERVICES_INFO.find(val => "@@root" in val);
		if (rootObj) {
			String.prototype.startsWith = rootObj['@@root'].microsoftAjaxBreaksStringStartsWith;
		}
	}

	const host = window.location.host;
    window.CCD_SERVICES_INFO.push({
        "@dg-support/scripts": {}
    });

	switch (host) {
		case 'local.denvergov.org':
			console.log('----------- Nothing for local. -----------');
			
			
            // How to use:
            $oc.Ready(() => {
                // Example usage that replaces H1 elements with a message
                const navDeviceContentAdapter = new Client_OcAdaptiveContentByNavigationDevice();
                navDeviceContentAdapter.adapt({
                    selector: 'h1',
                    mouse: 'Message for people who prefer mouse navigation',
                    keyboard: 'Message for people who prefer keyboard navigation',
                    touch: 'Message for people who prefer touch navigation',
                });

                // Example usage for tab announcement text
                navDeviceContentAdapter.adapt({
                    selector: '.tab-group .list_help p',
                    mouse: 'Accessibility instructions for mouse users.',
                    keyboard: 'Accessibility instructions for keyboard users.',
                    touch: 'Accessibility instructions for touch users.',
                });
            });
			
			break;
        case 'test.denvergov.org':
            break;
		case 'qa.denvergov.org':
            console.log('----------- Nothing for QA. -----------');
            break;
		case 'denvergov.org':
		case 'www.denvergov.org':
            console.log('----------- Nothing for Prod. -----------');
            break;
		case 'www.denvergov.org':
            document.write('<p style="color:red;">The \'{{ServiceName}}\' embedded services cannot be loaded via the direct opencities.com URL.</p>\n<p style="color:red;">Please visit this page on denvergov.org</p>');
			break;
		default:
			console.log('----------- Dont load, unknow host. -----------');
	}
})();


</script></div>
<div><script id="citibot-chatscript" type="text/javascript" src="https://webchat-ui.citibot.net/script.js?account_id=6708c8001aa1af151cbec14e&rightPad=80px&iconScale=1.5"></script></div>


	
	
</div>
                            </div>
                        </div>
                    </div>
                
                <div class="footer-outer-container footer-second-row">
                    <div class="footer-container clearfix">
                        <div class="grid grid-pad footer-secondary-links">
                            <div class="col-xs-12 col-m-7">
                                
                                    <div><a href="https://www.denvergov.org/Government/Agencies-Departments-Offices/Agencies-Departments-Offices-Directory/Work-With-Us" target="_self"  >City Jobs</a>&nbsp;| <a href="https://www.denvergov.org/Accessibility" target="_self"  >Accessibility</a>&nbsp;| <a href="https://www.denvergov.org/Privacy-Security" target="_self"  >Privacy & Security</a>&nbsp;| <a href="https://www.denvergov.org/Terms-of-Use" target="_self"  >Terms of Use</a>&nbsp;| <a href="https://www.denvergov.org/Open-Records-CORA" target="_self"  >Open Records (CORA)</a></div>
                                
                            </div>
                            <div class="col-xs-12 col-m-5 powered-by">
                                <div class="right">
                                    &copy; 2025 City and County of Denver&nbsp;|&nbsp;<span class="powered-by">Powered by <a href="https://granicus.com/solution/govaccess/opencities/" target="_blank">Granicus</a></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </footer>
        </div>
    </div>

    <script src="/files/oc-resources/b9015858-988c-48a4-9473-7c193df083e4/JsTextSnippets.js?ocsvclang=en-US" type="text/javascript"></script><script></script>
    
    
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-1920922-11"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-652DXLK6TC');
  gtag('config', 'UA-1920922-11');
  gtag('config', 'AW-11317335888');
</script>
    
    </form>
</body>
</html>